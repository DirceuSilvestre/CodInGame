4 cÃ³digos de 81% de acerto cada T.T

import sys
import math

# Auto-generated code below aims at helping you parse
# the standard input according to the problem statement.
d = 100000
v = 1000000
n = int(input())

for i in range(n):
    pi = int(input())
    if pi > d:
        if (pi - d) < v:
            v = pi - d
    elif d > pi:
        if (d - pi) < v:
            v = d - pi  
    d = pi  

# Write an answer using print
# To debug: print("Debug messages...", file=sys.stderr, flush=True)

print(v)

import sys
import math

# Auto-generated code below aims at helping you parse
# the standard input according to the problem statement.
d = 100000
v = 1000000
n = int(input())
if n < 11:
    pi = []
    for i in range(n):
        pi.append(int(input()))
    for j in range(n):
        for x in range(n):
            if (pi[j] - pi[x]) > 0 and (pi[j] - pi[x]) < v:
                v = pi[j] - pi[x]
else:
    for i in range(n):
        pi = int(input())
        if pi > d:
            if (pi - d) < v:
                v = pi - d
        elif d > pi:
            if (d - pi) < v:
                v = d - pi
        d = pi
# Write an answer using print
# To debug: print("Debug messages...", file=sys.stderr, flush=True)

print(v)

import sys
import math

# Auto-generated code below aims at helping you parse
# the standard input according to the problem statement.
d = 100000
v = 1000000
pi = []
n = int(input())
for i in range(n):
    pi.append(int(input()))
pi.sort(reverse=True)
for j in range(n):
    if pi[j] > d:
        if (pi[j] - d) < v:
            v = pi[j] - d
    elif d > pi[j]:
        if (d - pi[j]) < v:
            v = d - pi[j]
    d = pi[j]
# Write an answer using print
# To debug: print("Debug messages...", file=sys.stderr, flush=True)

print(v)

import math
d = 100000
v = 1000000
pi = []
n = int(input())
for i in range(n):
    pi.append(int(input()))
pi.sort(reverse=True)
for j in range(n):
    if math.isclose(pi[j], pi[j + 1]):
        v = pi[j] - pi[j + 1]
print(f'{v}')
